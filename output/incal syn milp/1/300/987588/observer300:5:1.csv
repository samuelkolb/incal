{"type": "initial", "indices": [236, 238, 146, 180, 225, 114, 288, 269, 132, 191, 162, 230, 163, 167, 278, 289, 275, 277, 263, 208]}
{"type": "update", "theory": "(<= (+ (* (const real 165.20399915981588) (var real r0)) (* (const real -144.17859837418547) (var real r1)) (* (const real -190.61740246599865) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 0.0) (var real r4))) (const real -67.21938472978074))", "indices": [33], "solving_time": 0.022513151168823242, "selection_time": 0.03352975845336914}
{"type": "update", "theory": "(<= (+ (* (const real 455.933835830695) (var real r0)) (* (const real -721.8501250236354) (var real r1)) (* (const real -715.4513988375584) (var real r2)) (* (const real -1000.0) (var real r3)) (* (const real 0.0) (var real r4))) (const real -1000.0))", "indices": [169], "solving_time": 0.01635885238647461, "selection_time": 0.033184051513671875}
{"type": "update", "theory": "(<= (+ (* (const real 64.71097013642162) (var real r0)) (* (const real -8.975727002073505) (var real r1)) (* (const real 0.0) (var real r2)) (* (const real -41.90546654965112) (var real r3)) (* (const real 35.62269918121553) (var real r4))) (const real 21.81190757335906))", "indices": [92], "solving_time": 0.012925863265991211, "selection_time": 0.03308892250061035}
{"type": "update", "theory": "(<= (+ (* (const real 64.38690274423534) (var real r0)) (* (const real -11.718172169032282) (var real r1)) (* (const real 0.0) (var real r2)) (* (const real -43.938779201428105) (var real r3)) (* (const real 32.95982966652365) (var real r4))) (const real 18.074868096181728))", "indices": [71], "solving_time": 0.013071775436401367, "selection_time": 0.03302907943725586}
{"type": "update", "theory": "(<= (+ (* (const real 27.678616915157544) (var real r0)) (* (const real -21.956971174756635) (var real r1)) (* (const real -6.400495405878822) (var real r2)) (* (const real -35.073438086107174) (var real r3)) (* (const real 0.0) (var real r4))) (const real -19.40763466751251))", "indices": [76], "solving_time": 0.014405965805053711, "selection_time": 0.03304600715637207}
{"type": "update", "theory": "(<= (+ (* (const real 25.93106378651101) (var real r0)) (* (const real -18.497607264497418) (var real r1)) (* (const real -6.014573851444869) (var real r2)) (* (const real -35.69471995278938) (var real r3)) (* (const real 0.0) (var real r4))) (const real -17.975044693381882))", "indices": [4], "solving_time": 0.014861106872558594, "selection_time": 0.03250575065612793}
{"type": "update", "theory": "(<= (+ (* (const real 688.9344142193886) (var real r0)) (* (const real -231.75188066490364) (var real r1)) (* (const real -58.80485406547041) (var real r2)) (* (const real -1000.0) (var real r3)) (* (const real 0.0) (var real r4))) (const real -235.4549346170063))", "indices": [253], "solving_time": 0.014522075653076172, "selection_time": 0.032618045806884766}
{"type": "update", "theory": "(<= (+ (* (const real 698.8603427810224) (var real r0)) (* (const real -237.14050761513954) (var real r1)) (* (const real -77.78557071761736) (var real r2)) (* (const real -1000.0) (var real r3)) (* (const real 0.0) (var real r4))) (const real -238.84433729201191))", "indices": [115], "solving_time": 0.015100240707397461, "selection_time": 0.0332338809967041}
{"type": "update", "theory": "(<= (+ (* (const real 58.85542077634394) (var real r0)) (* (const real -20.190850079940514) (var real r1)) (* (const real -9.52566191205102) (var real r2)) (* (const real -81.7901507885455) (var real r3)) (* (const real 0.0) (var real r4))) (const real -20.968045775776435))", "indices": [68], "solving_time": 0.009680032730102539, "selection_time": 0.040663957595825195}
{"type": "update", "theory": "(<= (+ (* (const real 85.96988118623285) (var real r0)) (* (const real -31.817179940518805) (var real r1)) (* (const real -14.833500305260944) (var real r2)) (* (const real -115.84969332600897) (var real r3)) (* (const real 0.0) (var real r4))) (const real -30.555114584060206))", "indices": [], "solving_time": 0.01932811737060547, "selection_time": 0.036253929138183594}
