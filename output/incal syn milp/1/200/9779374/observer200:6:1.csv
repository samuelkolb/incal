{"type": "initial", "indices": [172, 31, 3, 18, 67, 7, 145, 164, 154, 84, 165, 115, 66, 29, 118, 152, 179, 61, 167, 41]}
{"type": "update", "theory": "(<= (+ (* (const real 0.0) (var real r0)) (* (const real 173.7641048793209) (var real r1)) (* (const real -339.299890911315) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 187.79998824834038) (var real r4)) (* (const real -288.34052040598044) (var real r5))) (const real -86.71504045066955))", "indices": [131], "solving_time": 0.0191957950592041, "selection_time": 0.025104761123657227}
{"type": "update", "theory": "(<= (+ (* (const real -742.6841953828833) (var real r0)) (* (const real 812.2803234656277) (var real r1)) (* (const real 0.0) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 195.81985796070785) (var real r4)) (* (const real -141.54902266128312) (var real r5))) (const real 211.57047423505767))", "indices": [181], "solving_time": 0.018128156661987305, "selection_time": 0.025015830993652344}
{"type": "update", "theory": "(<= (+ (* (const real -715.8298824643933) (var real r0)) (* (const real 781.497584209517) (var real r1)) (* (const real 0.0) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 191.53808227556792) (var real r4)) (* (const real -133.71699552715498) (var real r5))) (const real 205.8156854394279))", "indices": [35], "solving_time": 0.015498876571655273, "selection_time": 0.025059223175048828}
{"type": "update", "theory": "(<= (+ (* (const real -1000.0) (var real r0)) (* (const real 409.03766612887284) (var real r1)) (* (const real -230.86744589398222) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 294.022797089925) (var real r4)) (* (const real -276.0940567785908) (var real r5))) (const real -288.5253995949713))", "indices": [1], "solving_time": 0.015691041946411133, "selection_time": 0.024782896041870117}
{"type": "update", "theory": "(<= (+ (* (const real -161.50918144255627) (var real r0)) (* (const real 118.32739424376364) (var real r1)) (* (const real -46.91299944380874) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 94.77207605144784) (var real r4)) (* (const real -44.72528153819891) (var real r5))) (const real 4.037312872571431))", "indices": [101], "solving_time": 0.013513326644897461, "selection_time": 0.0253598690032959}
{"type": "update", "theory": "(<= (+ (* (const real -33.286859259549566) (var real r0)) (* (const real 23.453961266022926) (var real r1)) (* (const real -8.053622662303624) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 12.36752248601362) (var real r4)) (* (const real -4.163121874668579) (var real r5))) (const real 0.7700915458073899))", "indices": [105], "solving_time": 0.011457204818725586, "selection_time": 0.024231910705566406}
{"type": "update", "theory": "(<= (+ (* (const real -19.699478681963214) (var real r0)) (* (const real 15.701051783638844) (var real r1)) (* (const real -5.105622002731275) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 7.783921351313774) (var real r4)) (* (const real -4.904040005820294) (var real r5))) (const real 0.8552405155107624))", "indices": [46], "solving_time": 0.012023210525512695, "selection_time": 0.024105072021484375}
{"type": "update", "theory": "(<= (+ (* (const real -145.52903659357372) (var real r0)) (* (const real 68.64535630691871) (var real r1)) (* (const real -53.198339578150765) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 60.7121284427673) (var real r4)) (* (const real -35.58971647766147) (var real r5))) (const real -31.402226098119755))", "indices": [195], "solving_time": 0.01704716682434082, "selection_time": 0.024114131927490234}
{"type": "update", "theory": "(<= (+ (* (const real -134.4807314280197) (var real r0)) (* (const real 111.42898447885253) (var real r1)) (* (const real -16.79254195284735) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 68.12052530331378) (var real r4)) (* (const real -50.026701283390075) (var real r5))) (const real 17.927062937377805))", "indices": [120], "solving_time": 0.03041696548461914, "selection_time": 0.033280134201049805}
{"type": "update", "theory": "(<= (+ (* (const real -861.1133611504522) (var real r0)) (* (const real 581.8831085107852) (var real r1)) (* (const real -100.91073452086883) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 491.11777234310193) (var real r4)) (* (const real -264.30472229960895) (var real r5))) (const real 58.09915102863551))", "indices": [144], "solving_time": 0.015771865844726562, "selection_time": 0.025465965270996094}
{"type": "update", "theory": "(<= (+ (* (const real -1000.0) (var real r0)) (* (const real 515.3803542209679) (var real r1)) (* (const real -352.45175181367705) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 831.6676910524966) (var real r4)) (* (const real -559.0122932464627) (var real r5))) (const real -62.74053892040398))", "indices": [26], "solving_time": 0.012521982192993164, "selection_time": 0.02829909324645996}
{"type": "update", "theory": "(<= (+ (* (const real -777.5742373857877) (var real r0)) (* (const real 671.340596125478) (var real r1)) (* (const real -210.4889029165675) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 414.0772511593918) (var real r4)) (* (const real -384.3730279713804) (var real r5))) (const real 95.67430476025176))", "indices": [13], "solving_time": 0.01617598533630371, "selection_time": 0.024100065231323242}
{"type": "update", "theory": "(<= (+ (* (const real -54.24031080186771) (var real r0)) (* (const real 30.824093430892262) (var real r1)) (* (const real -16.314691617740042) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 31.841036121234936) (var real r4)) (* (const real -30.223379155582865) (var real r5))) (const real -9.357322006532302))", "indices": [96], "solving_time": 0.023298025131225586, "selection_time": 0.03018808364868164}
{"type": "update", "theory": "(<= (+ (* (const real -54.322358537326885) (var real r0)) (* (const real 31.32760326868698) (var real r1)) (* (const real -16.3188817809868) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 32.22758140434094) (var real r4)) (* (const real -29.96134101352997) (var real r5))) (const real -8.573663721192325))", "indices": [106], "solving_time": 0.02267169952392578, "selection_time": 0.02328801155090332}
{"type": "update", "theory": "(<= (+ (* (const real -18.672512820799124) (var real r0)) (* (const real 12.025097765095332) (var real r1)) (* (const real -3.7614633977366254) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 8.645610595183289) (var real r4)) (* (const real -5.678581950542948) (var real r5))) (const real -1.2672773700822653))", "indices": [107], "solving_time": 0.022626161575317383, "selection_time": 0.023762941360473633}
{"type": "update", "theory": "(<= (+ (* (const real -18.622864458593543) (var real r0)) (* (const real 12.0227277893409) (var real r1)) (* (const real -3.743664132892965) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 8.645683746121065) (var real r4)) (* (const real -5.626514926243748) (var real r5))) (const real -1.2032030627390253))", "indices": [196], "solving_time": 0.023579835891723633, "selection_time": 0.023052215576171875}
{"type": "update", "theory": "(<= (+ (* (const real -109.15483460529063) (var real r0)) (* (const real 76.38551392621996) (var real r1)) (* (const real -21.837878861119062) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 45.77342562025814) (var real r4)) (* (const real -19.82414693765492) (var real r5))) (const real 3.5879467554358224))", "indices": [155], "solving_time": 0.021027088165283203, "selection_time": 0.027193307876586914}
{"type": "update", "theory": "(<= (+ (* (const real -999.9999999999986) (var real r0)) (* (const real 653.6650498449868) (var real r1)) (* (const real -195.11374016390394) (var real r2)) (* (const real 0.0) (var real r3)) (* (const real 467.9833669113918) (var real r4)) (* (const real -186.1248873548297) (var real r5))) (const real 38.604745981636306))", "indices": [], "solving_time": 0.01547384262084961, "selection_time": 0.022795915603637695}
